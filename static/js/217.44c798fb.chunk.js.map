{"version":3,"file":"static/js/217.44c798fb.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/contacts/filterSlice.js","components/Filter/Filter.jsx","components/Section.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.filter;\nexport const getIsLoading = (state) => state.contacts.isLoading;\nexport const getError = (state) => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formField\":\"ContactForm_formField__O5fo+\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formButton\":\"ContactForm_formButton__TN6Jq\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsSlice';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handlePhoneChange = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (name.trim() === '' || phone.trim() === '') {\n      return;\n    }\n\n    const nameExists = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n    if (nameExists) {\n      alert(`${name} already exists in contacts!`);\n      return;\n    }\n\n    dispatch(addContact({ name, phone }));\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.formField}>\n        <p className={css.formLabel}>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Za-яА-Я]+(([' \\-][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n          value={name}\n          onChange={handleNameChange}\n          required\n          placeholder=\"Enter name\"\n        />\n      </label>\n\n      <label className={css.formField}>\n        <p className={css.formLabel}>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          value={phone}\n          onChange={handlePhoneChange}\n          required\n          placeholder=\"Enter number\"\n        />\n      </label>\n\n      <button className={css.formButton} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactListItem_contactListItem__A4sXv\",\"contactAlign\":\"ContactListItem_contactAlign__wck7w\",\"btnDelete\":\"ContactListItem_btnDelete__xNYoO\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css';\n\nconst ContactListItem = ({ contact, deleteContact }) => {\n  const handleDelete = () => {\n    deleteContact(contact.id);\n  };\n\n  return (\n    <li className={css.contactListItem}>\n      <div className={css.contactAlign}>\n      <p>{contact.name}</p>\n      <p>{contact.phone}</p>\n      </div>\n      <button onClick={handleDelete}>Delete</button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport { getContacts, getFilter, getIsLoading, getError } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/contactsSlice';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      <ul>\n        {filteredContacts.map(contact => (\n          <ContactListItem key={contact.id} contact={contact} deleteContact={() => dispatch(deleteContact(contact.id))} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\"};","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    setFilter(state, action) {\n      return action.payload;\n    },\n  },\n});\n\nexport const { setFilter } = filterSlice.actions;\nexport default filterSlice.reducer;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { getFilter } from '../../redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onFilterChange = (e) => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div className={css.container}>\n      <p>Find Contacts by Name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search by name\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// components/Section/Section.jsx\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n\n","import React, { useEffect } from 'react';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport Section from '../components/Section';\nimport { store } from '../redux/store';\nimport { fetchContacts } from '../redux/contacts/contactsSlice';\nimport { Helmet } from 'react-helmet';\n\nexport const Contacts = () => {\n  useEffect(() => {\n    store.dispatch(fetchContacts());\n  }, []);\n\n  return (\n      <div>\n        <Helmet>\n        <title>Contacts</title>\n        </Helmet>\n        <Section title=\"Phonebook\">\n          <ContactForm />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactList />\n        </Section>\n      </div>\n  );\n};\n"],"names":["getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getError","error","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","phone","setPhone","_jsxs","className","css","onSubmit","e","preventDefault","trim","find","contact","toLowerCase","alert","concat","addContact","children","_jsx","type","pattern","value","onChange","target","required","placeholder","_ref","deleteContact","onClick","id","filteredContacts","includes","_Fragment","map","ContactListItem","filterSlice","createSlice","initialState","reducers","setFilter","action","payload","actions","title","Contacts","useEffect","store","fetchContacts","Helmet","Section","ContactForm","Filter","ContactList"],"sourceRoot":""}